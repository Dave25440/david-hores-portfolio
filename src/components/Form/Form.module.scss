@use "../../styles/_animations";
@use "../../styles/_mixins";
@use "../../styles/_variables";

.form {
    align-self: center;
    position: relative;
    width: 45%;
    animation: slideToBottom 0.6s ease;
    @include mixins.column-flexbox(flex-start);
    @include mixins.text-style(variables.$color-content, 1.125rem, 400);

    @media (max-width: variables.$breakpoint-small) {
        font-size: 1rem;
        width: calc(100% - 8px);
        margin-top: 30px;
        animation: slideToRight 0.6s ease;
    }

    &__input,
    &__textarea {
        border: 0;
        border-radius: 5px;
        margin: 15px 0 30px 0;
        padding: 10px;
        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
        @include mixins.text-style(variables.$color-content, 1rem, 400);

        @media (max-width: variables.$breakpoint-small) {
            margin: 10px 0 20px 0;
            padding: 7.5px;
            filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.2));
        }
    }

    &__textarea {
        resize: none;
    }

    &__submit {
        align-self: flex-end;
        transition: all 0.2s;
        @include mixins.button-style(variables.$color-primary, 10px, 10px 20px);
        @include mixins.text-style(variables.$color-background, 1.25rem, 400);

        @media (max-width: variables.$breakpoint-small) {
            font-size: 1.125rem;
            padding: 10px 15px;
        }

        &:hover {
            transform: translateY(-5px);
            filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.4));
        }
    }

    &__status {
        position: absolute;
        bottom: 0;
        background-color: variables.$color-primary;
        border-radius: 10px;
        padding: 10px 20px;
        animation: slideToTop 0.4s ease-out,
            slideToTop 0.4s ease-in 4.6s reverse forwards;
        @include mixins.text-style(variables.$color-background, 1.25rem, 400);

        @media (max-width: variables.$breakpoint-small) {
            font-size: 1.125rem;
            padding: 10px 15px;
        }

        &--success {
            background-color: variables.$color-secondary;
        }

        &--error {
            background-color: variables.$color-tertiary;
        }
    }
}
